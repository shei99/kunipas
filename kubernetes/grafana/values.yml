ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: prod-dns-cluster-issuer
  path: /
  pathType: Prefix
  hosts:
    - grafana.example.com
  tls:
    - secretName: grafana-prod-tls
      hosts:
        - grafana.example.com

persistence:
  enabled: true
  size: 1Gi

admin:
  existingSecret: "grafana-admin"
  userKey: admin-user
  passwordKey: admin-password

# datasources:
#  datasources.yaml:
#    apiVersion: 1
#    datasources:
#      - name: Loki
#        type: loki
#        access: proxy
#        url: http://loki-grafana.logging.svc.cluster.local
#        isDefault: true
#        orgId: 1

envFromSecret: grafana-oidc
grafana.ini:
  server:
  # The full public facing url you use in browser, used for redirects and emails
    root_url: https://grafana.example.com
  # https://grafana.com/docs/grafana/latest/auth/github/#enable-github-in-grafana
  auth:
    oauth_allow_insecure_email_lookup: true

  auth.generic_oauth:
    enabled: true
    name: Keycloak
    allow_sign_up: true
    # client_id: grafana
    # client_secret: client_secret
    scopes: openid email profile offline_access
    email_attribute_path: email
    login_attribute_path: username
    name_attribute_path: full_name
    role_attribute_path: contains(groups[*], 'kunipas') && 'Admin' || 'Editor'
    groups_attribute_path: groups
    allow_assign_grafana_admin: true
    auth_url: "https://keycloak.example.com/realms/master/protocol/openid-connect/auth"
    token_url: "https://keycloak.example.com/realms/master/protocol/openid-connect/token"
    api_url: "https://keycloak.example.com/realms/master/protocol/openid-connect/userinfo"
    # pass_authorization_header: true
    # pass_access_token: true
    # pass_user_headers: true
    # set_authorization_header: true

assertNoLeakedSecrets: false
